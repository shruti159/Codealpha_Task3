#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Structure for student
struct Student {
    int roll;
    char name[50];
    int age;
    char branch[20];
};

// File name
const char *filename = "students.dat";

// Function to add a student
void addStudent() {
    struct Student s;
    FILE *fp = fopen(filename, "ab");
    if (!fp) {
        printf("Error opening file!\n");
        return;
    }
    printf("\nEnter Roll No: ");
    scanf("%d", &s.roll);
    printf("Enter Name: ");
    scanf(" %[^\n]", s.name);
    printf("Enter Age: ");
    scanf("%d", &s.age);
    printf("Enter Branch: ");
    scanf(" %[^\n]", s.branch);

    fwrite(&s, sizeof(s), 1, fp);
    fclose(fp);
    printf("Student record added successfully!\n");
}

// to display all students
void displayStudents() {
    struct Student s;
    FILE *fp = fopen(filename, "rb");
    if (!fp) {
        printf("No records found!\n");
        return;
    }
    printf("\n--- Student Records ---\n");
    while (fread(&s, sizeof(s), 1, fp)) {
        printf("Roll: %d | Name: %s | Age: %d | Branch: %s\n", s.roll, s.name, s.age, s.branch);
    }
    fclose(fp);
}

// to search student by roll number
void searchStudent() {
    struct Student s;
    int roll, found = 0;
    FILE *fp = fopen(filename, "rb");
    if (!fp) {
        printf("No records found!\n");
        return;
    }
    printf("\nEnter Roll No to search: ");
    scanf("%d", &roll);
    while (fread(&s, sizeof(s), 1, fp)) {
        if (s.roll == roll) {
            printf("Record Found: Roll: %d | Name: %s | Age: %d | Branch: %s\n",
                   s.roll, s.name, s.age, s.branch);
            found = 1;
            break;
        }
    }
    if (!found) printf("Record not found!\n");
    fclose(fp);
}

// to update a student record
void updateStudent() {
    struct Student s;
    int roll, found = 0;
    FILE *fp = fopen(filename, "rb+");
    if (!fp) {
        printf("No records found!\n");
        return;
    }
    printf("\nEnter Roll No to update: ");
    scanf("%d", &roll);
    while (fread(&s, sizeof(s), 1, fp)) {
        if (s.roll == roll) {
            printf("Enter New Name: ");
            scanf(" %[^\n]", s.name);
            printf("Enter New Age: ");
            scanf("%d", &s.age);
            printf("Enter New Branch: ");
            scanf(" %[^\n]", s.branch);

            fseek(fp, -sizeof(s), SEEK_CUR);
            fwrite(&s, sizeof(s), 1, fp);
            printf("Record updated successfully!\n");
            found = 1;
            break;
        }
    }
    if (!found) printf("Record not found!\n");
    fclose(fp);
}

//to delete a student record
void deleteStudent() {
    struct Student s;
    int roll, found = 0;
    FILE *fp = fopen(filename, "rb");
    FILE *temp = fopen("temp.dat", "wb");

    if (!fp || !temp) {
        printf("Error opening file!\n");
        return;
    }

    printf("\nEnter Roll No to delete: ");
    scanf("%d", &roll);
    while (fread(&s, sizeof(s), 1, fp)) {
        if (s.roll == roll) {
            found = 1;
            continue; // Skip writing this record
        }
        fwrite(&s, sizeof(s), 1, temp);
    }
    fclose(fp);
    fclose(temp);

    remove(filename);
    rename("temp.dat", filename);

    if (found)
        printf("Record deleted successfully!\n");
    else
        printf("Record not found!\n");
}

// Main menu
int main() {
    int choice;
    while (1) {
        printf("\n--- Student Management System ---\n");
        printf("1. Add Student\n");
        printf("2. Display All Students\n");
        printf("3. Search Student\n");
        printf("4. Update Student\n");
        printf("5. Delete Student\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: addStudent(); break;
            case 2: displayStudents(); break;
            case 3: searchStudent(); break;
            case 4: updateStudent(); break;
            case 5: deleteStudent(); break;
            case 6: exit(0);
            default: printf("Invalid choice! Try again.\n");
        }
    }
    return 0;
}
